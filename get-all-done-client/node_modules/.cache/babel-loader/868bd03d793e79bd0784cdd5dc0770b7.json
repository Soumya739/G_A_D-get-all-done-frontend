{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/Desktop/G_A_D-project/G_A_D-get-all-done-frontend/get-all-done-client/src/containers/SignupForm.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom'; // import Home from './Home'\n\nconst URL = \"http://localhost:3000\";\nexport class SignupForm extends Component {\n  // let { onSetCurrentUser, onsignUp, onLoggedIn, signup } = this.props\n  // let { username, email, phone, country, city, contractee, contractor, submitted } = this.state\n  constructor() {\n    super();\n\n    this.handleUsername = e => {\n      this.setState({\n        username: e.target.value\n      });\n    };\n\n    this.handleEmail = e => {\n      this.setState({\n        email: e.target.value\n      });\n    };\n\n    this.handlePhone = e => {\n      this.setState({\n        phone: e.target.value\n      });\n    };\n\n    this.handleCountry = e => {\n      this.setState({\n        country: e.target.value\n      });\n    };\n\n    this.handleCity = e => {\n      let stateKey = e.target.id;\n      this.setState({\n        [stateKey]: e.target.value\n      });\n    };\n\n    this.handlePersonSelection = e => {\n      if (e.target.value === \"contractor\") {\n        this.setState({\n          contractee: false,\n          contractor: true\n        });\n      } else {\n        this.setState({\n          contractee: true,\n          contractor: false\n        });\n      }\n    };\n\n    this.handleSubmittedStatus = () => {\n      this.setState({\n        submitted: true\n      });\n    };\n\n    this.handleFormSubmit = e => {\n      let _this$props = this.props,\n          onSetCurrentUser = _this$props.onSetCurrentUser,\n          onSignUp = _this$props.onSignUp,\n          onLoggedIn = _this$props.onLoggedIn;\n      console.log(\"signed up\");\n      let _this$state = this.state,\n          username = _this$state.username,\n          email = _this$state.email,\n          phone = _this$state.phone,\n          country = _this$state.country,\n          city = _this$state.city,\n          contractee = _this$state.contractee,\n          contractor = _this$state.contractor;\n      onSignUp();\n      onLoggedIn();\n      fetch(URL + \"/users\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"Application/json\",\n          Accept: \"Application/json\"\n        },\n        body: JSON.stringify({\n          username: username,\n          email: email,\n          city: city,\n          country: country,\n          phone: phone,\n          contractee: contractee,\n          contractor: contractor\n        })\n      }).then(response => response.json()).then(user => {\n        console.log(user);\n\n        if (user.contractor) {\n          fetch(URL + \"/contractors\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"Application/json\",\n              Accept: \"Application/json\"\n            },\n            body: JSON.stringify({\n              user_id: user.id\n            })\n          }).then(response => response.json()).then(currentUser => {\n            onSetCurrentUser(\"contractor\");\n          });\n        } else {\n          fetch(URL + \"/contractees\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"Application/json\",\n              Accept: \"Application/json\"\n            },\n            body: JSON.stringify({\n              user_id: user.id\n            })\n          }).then(response => response.json()).then(currentUser => {\n            onSetCurrentUser(\"contractee\");\n          });\n        }\n      }).then(this.setState({\n        username: \"\",\n        email: \"\",\n        phone: 0,\n        country: \"\",\n        city: \"\",\n        contractee: false,\n        contractor: false\n      }));\n      this.handleSubmittedStatus();\n    };\n\n    this.state = {\n      username: \"\",\n      email: \"\",\n      phone: 0,\n      country: \"\",\n      city: \"\",\n      contractee: false,\n      contractor: false,\n      submitted: false\n    };\n  }\n\n  render() {\n    let signup = this.props.signup;\n    let _this$state2 = this.state,\n        username = _this$state2.username,\n        email = _this$state2.email,\n        phone = _this$state2.phone,\n        country = _this$state2.country,\n        city = _this$state2.city,\n        submitted = _this$state2.submitted;\n\n    if (submitted === true || signup == false) {\n      return React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(\"div\", {\n        className: \"space_between_lines\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: e => this.handleFormSubmit(e),\n        className: \"space_between_lines\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        id: \"username\",\n        placeholder: \"username\",\n        onChange: e => this.handleUsername(e),\n        value: username,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        placeholder: \"city\",\n        onChange: e => this.handleCity(e),\n        value: city,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"country\",\n        placeholder: \"country\",\n        onChange: e => this.handleCountry(e),\n        value: country,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"email\",\n        placeholder: \"email\",\n        onChange: e => this.handleEmail(e),\n        value: email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"number\",\n        id: \"number\",\n        placeholder: \"phone\",\n        onChange: e => this.handlePhone(e),\n        value: phone,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }), React.createElement(\"select\", {\n        onChange: e => this.handlePersonSelection(e),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        selected: true,\n        disabled: true,\n        hidden: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"Choose here\"), React.createElement(\"option\", {\n        value: \"contractee\",\n        selected: \"selected\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, \"Contractee\"), React.createElement(\"option\", {\n        value: \"contractor\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \"Contractor\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      })));\n    }\n  }\n\n}\nexport default SignupForm;","map":{"version":3,"sources":["/Users/flatironschool/Desktop/G_A_D-project/G_A_D-get-all-done-frontend/get-all-done-client/src/containers/SignupForm.js"],"names":["React","Component","Redirect","URL","SignupForm","constructor","handleUsername","e","setState","username","target","value","handleEmail","email","handlePhone","phone","handleCountry","country","handleCity","stateKey","id","handlePersonSelection","contractee","contractor","handleSubmittedStatus","submitted","handleFormSubmit","props","onSetCurrentUser","onSignUp","onLoggedIn","console","log","state","city","fetch","method","headers","Accept","body","JSON","stringify","then","response","json","user","user_id","currentUser","render","signup"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom';\n// import Home from './Home'\n\nconst URL = \"http://localhost:3000\"\n\nexport class SignupForm extends Component {\n    // let { onSetCurrentUser, onsignUp, onLoggedIn, signup } = this.props\n    // let { username, email, phone, country, city, contractee, contractor, submitted } = this.state\n    constructor() {\n        super()\n        this.state = {\n            username: \"\",\n            email: \"\",\n            phone: 0,\n            country: \"\",\n            city: \"\",\n            contractee: false,\n            contractor: false,\n            submitted: false\n        }\n\n    }\n\n    handleUsername = (e) => {\n        this.setState({\n            username: e.target.value\n        })\n    }\n\n    handleEmail = (e) => {\n        this.setState({\n            email: e.target.value\n        })\n    }\n\n    handlePhone = (e) => {\n        this.setState({\n            phone: e.target.value\n        })\n    }\n\n    handleCountry = (e) => {\n        this.setState({\n            country: e.target.value\n        })\n    }\n\n    handleCity = (e) => {\n        let stateKey = e.target.id\n        this.setState({\n            [stateKey]: e.target.value\n        })\n    }\n\n    handlePersonSelection = (e) => {\n        if (e.target.value === \"contractor\") {\n            this.setState({\n                contractee: false,\n                contractor: true\n            })\n        } else {\n            this.setState({\n                contractee: true,\n                contractor: false\n            })\n        }\n    }\n\n    handleSubmittedStatus = () => {\n        this.setState({ submitted: true })\n    }\n\n    handleFormSubmit = (e) => {\n        let { onSetCurrentUser, onSignUp, onLoggedIn } = this.props\n        console.log(\"signed up\")\n        let { username, email, phone, country, city, contractee, contractor } = this.state\n\n        onSignUp()\n        onLoggedIn()\n\n        fetch(URL + \"/users\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"Application/json\",\n                Accept: \"Application/json\"\n            },\n            body: JSON.stringify({\n                username: username,\n                email: email,\n                city: city,\n                country: country,\n                phone: phone,\n                contractee: contractee,\n                contractor: contractor\n            })\n        })\n            .then(response => response.json())\n            .then(user => {\n                console.log(user);\n                if (user.contractor) {\n                    fetch(URL + \"/contractors\", {\n                        method: \"POST\",\n                        headers: {\n                            \"Content-Type\": \"Application/json\",\n                            Accept: \"Application/json\"\n                        },\n                        body: JSON.stringify({\n                            user_id: user.id\n                        })\n                    })\n                        .then(response => response.json())\n                        .then(currentUser => {\n                            onSetCurrentUser(\"contractor\")\n                        })\n                } else {\n                    fetch(URL + \"/contractees\", {\n                        method: \"POST\",\n                        headers: {\n                            \"Content-Type\": \"Application/json\",\n                            Accept: \"Application/json\"\n                        },\n                        body: JSON.stringify({\n                            user_id: user.id\n                        })\n                    })\n                        .then(response => response.json())\n                        .then(currentUser => {\n                            onSetCurrentUser(\"contractee\")\n                        })\n                }\n            })\n            .then(this.setState({\n                username: \"\",\n                email: \"\",\n                phone: 0,\n                country: \"\",\n                city: \"\",\n                contractee: false,\n                contractor: false\n            }))\n        this.handleSubmittedStatus()\n    }\n\n    render() {\n        let { signup } = this.props\n        let { username, email, phone, country, city, submitted } = this.state\n        if (submitted === true || signup == false) {\n            return <Redirect to='/' />\n        } else {\n            return (\n                <div className='space_between_lines'>\n                    <form onSubmit={(e) => this.handleFormSubmit(e)} className='space_between_lines'>\n                        <input type='text' id=\"username\" placeholder='username' onChange={(e) => this.handleUsername(e)} value={username} /><br />\n                        <input type='text' id='city' placeholder='city' onChange={(e) => this.handleCity(e)} value={city} /><br />\n                        <input type='text' id='country' placeholder='country' onChange={(e) => this.handleCountry(e)} value={country} /><br />\n                        <input type='text' id='email' placeholder='email' onChange={(e) => this.handleEmail(e)} value={email} /><br />\n                        <input type='number' id='number' placeholder='phone' onChange={(e) => this.handlePhone(e)} value={phone} /><br />\n                        <select onChange={(e) => this.handlePersonSelection(e)}>\n                            <option value=\"\" selected disabled hidden>Choose here</option>\n                            <option value='contractee' selected=\"selected\">Contractee</option>\n                            <option value='contractor'>Contractor</option>\n                        </select><br />\n                        <input type='submit' value=\"Submit\" />\n                    </form>\n                </div>\n            )\n        }\n    }\n}\n\nexport default SignupForm\n"]},"metadata":{},"sourceType":"module"}