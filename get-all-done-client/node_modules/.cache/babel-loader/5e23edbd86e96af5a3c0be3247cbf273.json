{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/Desktop/G_A_D-project/G_A_D-get-all-done-frontend/get-all-done-client/src/containers/NewPostForm.js\";\nimport React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nconst URL = \"http://localhost:3000\";\nexport class NewPostForm extends Component {\n  constructor() {\n    super();\n\n    this.handleTitleInput = e => {\n      this.setState({\n        title: e.target.value\n      });\n    };\n\n    this.handleDescriptionInput = e => {\n      this.setState({\n        description: e.target.value\n      });\n    };\n\n    this.handleSubmittedStatus = () => {\n      this.setState({\n        submitted: !this.state.submitted\n      });\n    };\n\n    this.handleCategoriesInput = e => {\n      this.setState({\n        categories: [e.target.value]\n      });\n    };\n\n    this.handlePostFormSubmit = e => {\n      e.preventDefault();\n      this.handleSubmittedStatus();\n      let _this$state = this.state,\n          title = _this$state.title,\n          description = _this$state.description,\n          categories = _this$state.categories;\n      fetch(URL + \"/posts\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"Application/json\",\n          Accept: \"Application/json\"\n        },\n        body: JSON.stringify({\n          title: title,\n          description: description,\n          categories: categories\n        })\n      }).then(resp => resp.json()).then(posts => {\n        console.log(posts);\n      });\n    };\n\n    this.state = {\n      title: \"\",\n      description: \"\",\n      categories: [],\n      submitted: false\n    };\n  }\n\n  render() {\n    if (this.state.submitted === true) {\n      return React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Submitted\");\n    } else {\n      // t.string :title\n      // t.string :description\n      // t.integer :contractee_id\n      // t.integer :contractor_id\n      // t.string :categories, array: true, default: []\n      // t.string :status\n      return React.createElement(\"div\", {\n        className: \"space_between_lines\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Create a Post\", React.createElement(\"form\", {\n        onSubmit: e => this.handlePostFormSubmit(e),\n        className: \"space_between_lines\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Title:\"), React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"title\",\n        id: \"title\",\n        onChange: e => this.handleTitleInput(e),\n        value: this.state.title,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Description:\"), React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"description\",\n        id: \"description\",\n        onChange: e => this.handleDescriptionInput(e),\n        value: this.state.description,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Categories:\"), React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: \"categories\",\n        id: \"categories\",\n        onChange: e => this.handleCategoriesInput(e),\n        value: this.state.categories,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      })), React.createElement(NavLink, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Cancel\")));\n    }\n  }\n\n}\nexport default NewPostForm;","map":{"version":3,"sources":["/Users/flatironschool/Desktop/G_A_D-project/G_A_D-get-all-done-frontend/get-all-done-client/src/containers/NewPostForm.js"],"names":["React","Component","NavLink","URL","NewPostForm","constructor","handleTitleInput","e","setState","title","target","value","handleDescriptionInput","description","handleSubmittedStatus","submitted","state","handleCategoriesInput","categories","handlePostFormSubmit","preventDefault","fetch","method","headers","Accept","body","JSON","stringify","then","resp","json","posts","console","log","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { NavLink } from 'react-router-dom';\n\nconst URL = \"http://localhost:3000\"\n\nexport class NewPostForm extends Component {\n    constructor() {\n        super();\n        this.state = {\n            title: \"\",\n            description: \"\",\n            categories: [],\n            submitted: false\n        }\n    }\n\n    handleTitleInput = (e) => {\n        this.setState({ title: e.target.value })\n    }\n    handleDescriptionInput = (e) => {\n        this.setState({ description: e.target.value })\n    }\n    handleSubmittedStatus = () => {\n        this.setState({ submitted: !this.state.submitted })\n    }\n    handleCategoriesInput = (e) => {\n        this.setState({ categories: [e.target.value] })\n    }\n\n    handlePostFormSubmit = (e) => {\n        e.preventDefault()\n        this.handleSubmittedStatus()\n        let { title, description, categories } = this.state\n        fetch(URL + \"/posts\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"Application/json\",\n                Accept: \"Application/json\"\n            },\n            body: JSON.stringify({\n                title: title,\n                description: description,\n                categories: categories\n            })\n        })\n            .then(resp => resp.json())\n            .then(posts => {\n                console.log(posts)\n            })\n    }\n\n\n    render() {\n        if (this.state.submitted === true) {\n            return <h2>Submitted</h2>\n        } else {\n            // t.string :title\n            // t.string :description\n            // t.integer :contractee_id\n            // t.integer :contractor_id\n            // t.string :categories, array: true, default: []\n            // t.string :status\n            return (\n                <div className='space_between_lines'>\n                    Create a Post\n                <form onSubmit={(e) => this.handlePostFormSubmit(e)} className='space_between_lines'>\n                        <label>Title:</label>\n                        <input type='text' placeholder='title' id=\"title\" onChange={(e) => this.handleTitleInput(e)} value={this.state.title} required /><br />\n                        <label>Description:</label>\n                        <input type='text' placeholder='description' id=\"description\" onChange={(e) => this.handleDescriptionInput(e)} value={this.state.description} required /><br />\n                        <label>Categories:</label>\n                        <input type='text' placeholder='categories' id=\"categories\" onChange={(e) => this.handleCategoriesInput(e)} value={this.state.categories} required /><br />\n                        <input type='submit' value=\"Submit\" />\n                    </form>\n                    {/* {this.state.submitted ? <h2>Submitted</h2> : <></>} */}\n                    <NavLink to=\"/\"><button>Cancel</button></NavLink>\n                </div>\n            )\n        }\n    }\n}\n\nexport default NewPostForm\n"]},"metadata":{},"sourceType":"module"}