{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/Desktop/G_A_D-project/G_A_D-get-all-done-frontend/get-all-done-client/src/containers/App.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport SignupForm from './SignupForm';\nimport LoginForm from './LoginForm';\nimport Navbar from '../components/Navbar';\nimport NewPostForm from './NewPostForm';\nimport Timeline from '../components/Timeline';\nconst PostsURL = \"http://localhost:3000/posts\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.signUp = () => {\n      this.setState({\n        signup: !this.state.signup,\n        login: false\n      });\n    };\n\n    this.login = () => {\n      this.setState({\n        login: !this.state.login,\n        signup: false\n      });\n    };\n\n    this.loggedIn = () => {\n      this.setState({\n        loggedIn: true\n      });\n    };\n\n    this.setCurrentUser = signedInUser => {\n      this.setState({\n        loggedInAs: signedInUser\n      });\n    };\n\n    this.state = {\n      signup: false,\n      login: false,\n      loggedInAs: \"\",\n      loggedIn: false,\n      posts: []\n    };\n  }\n\n  componentDidMount() {\n    fetch(PostsURL).then(resp => resp.json()).then(posts => {\n      console.log(posts);\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      signUp: this.signUp,\n      login: this.login,\n      loggedIn: this.state.loggedIn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/signup\",\n      render: () => React.createElement(SignupForm, {\n        onSetCurrentUser: this.setCurrentUser,\n        onsignUp: this.signUp,\n        loggedIn: this.loggedIn,\n        signup: this.state.signup,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/login\",\n      render: () => React.createElement(LoginForm, {\n        onSetCurrentUser: this.setCurrentUser,\n        onLoggedIn: this.loggedIn,\n        login: this.state.login,\n        onLogin: this.login,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/post/new\",\n      render: () => React.createElement(NewPostForm, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/timeline\",\n      render: () => React.createElement(Timeline, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/flatironschool/Desktop/G_A_D-project/G_A_D-get-all-done-frontend/get-all-done-client/src/containers/App.js"],"names":["React","Component","BrowserRouter","Router","Route","SignupForm","LoginForm","Navbar","NewPostForm","Timeline","PostsURL","App","constructor","signUp","setState","signup","state","login","loggedIn","setCurrentUser","signedInUser","loggedInAs","posts","componentDidMount","fetch","then","resp","json","console","log","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport SignupForm from './SignupForm'\nimport LoginForm from './LoginForm'\nimport Navbar from '../components/Navbar'\nimport NewPostForm from './NewPostForm'\nimport Timeline from '../components/Timeline'\n\nconst PostsURL = \"http://localhost:3000/posts\"\nclass App extends Component {\n    constructor() {\n        super()\n        this.state = {\n            signup: false,\n            login: false,\n            loggedInAs: \"\",\n            loggedIn: false,\n            posts: []\n        }\n    }\n\n    componentDidMount() {\n        fetch(PostsURL)\n            .then(resp => resp.json())\n            .then(posts => {\n                console.log(posts)\n            })\n    }\n\n    signUp = () => {\n        this.setState({ signup: !this.state.signup, login: false })\n    }\n\n    login = () => {\n        this.setState({ login: !this.state.login, signup: false })\n    }\n\n    loggedIn = () => {\n        this.setState({ loggedIn: true })\n    }\n\n    setCurrentUser = (signedInUser) => {\n        this.setState({ loggedInAs: signedInUser })\n    }\n\n    render() {\n        return (\n            <div>\n                <Router>\n                    <Navbar signUp={this.signUp} login={this.login} loggedIn={this.state.loggedIn} />\n                    <Route exact path=\"/signup\" render={() => <SignupForm onSetCurrentUser={this.setCurrentUser} onsignUp={this.signUp} loggedIn={this.loggedIn} signup={this.state.signup} />} />\n                    <Route exact path=\"/login\" render={() => <LoginForm onSetCurrentUser={this.setCurrentUser} onLoggedIn={this.loggedIn} login={this.state.login} onLogin={this.login} />} />\n                    <Route exact path=\"/post/new\" render={() => <NewPostForm />} />\n                    <Route exact path=\"/timeline\" render={() => <Timeline />} />\n                </Router>\n            </div>\n        )\n    }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}