{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/Desktop/G_A_D-project/G_A_D-get-all-done-frontend/get-all-done-client/src/containers/SignupForm.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom'; // import Home from './Home'\n\nconst URL = \"http://localhost:3000\";\nexport class SignupForm extends Component {\n  constructor() {\n    super();\n\n    this.handleUsername = e => {\n      this.setState({\n        username: e.target.value\n      });\n    };\n\n    this.handleEmail = e => {\n      this.setState({\n        email: e.target.value\n      });\n    };\n\n    this.handlePhone = e => {\n      this.setState({\n        phone: e.target.value\n      });\n    };\n\n    this.handleCountry = e => {\n      this.setState({\n        country: e.target.value\n      });\n    };\n\n    this.handleCity = e => {\n      this.setState({\n        city: e.target.value\n      });\n    };\n\n    this.handlePersonSelection = e => {\n      if (e.target.value === \"contractor\") {\n        this.setState({\n          contractee: false,\n          contractor: true\n        });\n      } else {\n        this.setState({\n          contractee: true,\n          contractor: false\n        });\n      }\n    };\n\n    this.handleSubmittedStatus = () => {\n      this.setState({\n        submitted: true\n      });\n    };\n\n    this.handleFormSubmit = e => {\n      console.log(\"signed up\");\n      let _this$state = this.state,\n          username = _this$state.username,\n          email = _this$state.email,\n          phone = _this$state.phone,\n          country = _this$state.country,\n          city = _this$state.city,\n          contractee = _this$state.contractee,\n          contractor = _this$state.contractor;\n      this.props.onsignUp();\n      this.props.loggedIn();\n      fetch(URL + \"/users\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"Application/json\",\n          Accept: \"Application/json\"\n        },\n        body: JSON.stringify({\n          username: username,\n          email: email,\n          city: city,\n          country: country,\n          phone: phone,\n          contractee: contractee,\n          contractor: contractor\n        })\n      }).then(response => response.json()).then(user => {\n        console.log(user);\n\n        if (user.contractor) {\n          fetch(URL + \"/contractors\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"Application/json\",\n              Accept: \"Application/json\"\n            },\n            body: JSON.stringify({\n              user_id: user.id\n            })\n          }).then(response => response.json()).then(currentUser => {\n            this.props.onSetCurrentUser(\"contractor\");\n          });\n        } else {\n          fetch(URL + \"/contractees\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"Application/json\",\n              Accept: \"Application/json\"\n            },\n            body: JSON.stringify({\n              user_id: user.id\n            })\n          }).then(response => response.json()).then(currentUser => {\n            this.props.onSetCurrentUser(\"contractee\");\n          });\n        }\n      }).then(this.setState({\n        username: \"\",\n        email: \"\",\n        phone: 0,\n        country: \"\",\n        city: \"\",\n        contractee: false,\n        contractor: false\n      }));\n      this.handleSubmittedStatus();\n    };\n\n    this.state = {\n      username: \"\",\n      email: \"\",\n      phone: 0,\n      country: \"\",\n      city: \"\",\n      contractee: false,\n      contractor: false,\n      submitted: false\n    };\n  }\n\n  render() {\n    if (this.state.submitted === true && this.props.signup == false) {\n      return React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(\"div\", {\n        className: \"space_between_lines\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: e => this.handleFormSubmit(e),\n        className: \"space_between_lines\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        id: \"username\",\n        placeholder: \"username\",\n        onChange: e => this.handleUsername(e),\n        value: this.state.username,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        placeholder: \"city\",\n        onChange: e => this.handleCity(e),\n        value: this.state.city,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"country\",\n        placeholder: \"country\",\n        onChange: e => this.handleCountry(e),\n        value: this.state.country,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"email\",\n        placeholder: \"email\",\n        onChange: e => this.handleEmail(e),\n        value: this.state.email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"number\",\n        id: \"number\",\n        placeholder: \"phone\",\n        onChange: e => this.handlePhone(e),\n        value: this.state.phone,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }), React.createElement(\"select\", {\n        onChange: e => this.handlePersonSelection(e),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        selected: true,\n        disabled: true,\n        hidden: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, \"Choose here\"), React.createElement(\"option\", {\n        value: \"contractee\",\n        selected: \"selected\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, \"Contractee\"), React.createElement(\"option\", {\n        value: \"contractor\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, \"Contractor\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      })));\n    }\n  }\n\n}\nexport default SignupForm;","map":{"version":3,"sources":["/Users/flatironschool/Desktop/G_A_D-project/G_A_D-get-all-done-frontend/get-all-done-client/src/containers/SignupForm.js"],"names":["React","Component","Redirect","URL","SignupForm","constructor","handleUsername","e","setState","username","target","value","handleEmail","email","handlePhone","phone","handleCountry","country","handleCity","city","handlePersonSelection","contractee","contractor","handleSubmittedStatus","submitted","handleFormSubmit","console","log","state","props","onsignUp","loggedIn","fetch","method","headers","Accept","body","JSON","stringify","then","response","json","user","user_id","id","currentUser","onSetCurrentUser","render","signup"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom';\n// import Home from './Home'\n\nconst URL = \"http://localhost:3000\"\n\nexport class SignupForm extends Component {\n    constructor() {\n        super()\n        this.state = {\n            username: \"\",\n            email: \"\",\n            phone: 0,\n            country: \"\",\n            city: \"\",\n            contractee: false,\n            contractor: false,\n            submitted: false\n        }\n    }\n\n    handleUsername = (e) => {\n        this.setState({\n            username: e.target.value\n        })\n    }\n\n    handleEmail = (e) => {\n        this.setState({\n            email: e.target.value\n        })\n    }\n\n    handlePhone = (e) => {\n        this.setState({\n            phone: e.target.value\n        })\n    }\n\n    handleCountry = (e) => {\n        this.setState({\n            country: e.target.value\n        })\n    }\n\n    handleCity = (e) => {\n        this.setState({\n            city: e.target.value\n        })\n    }\n\n    handlePersonSelection = (e) => {\n        if (e.target.value === \"contractor\") {\n            this.setState({\n                contractee: false,\n                contractor: true\n            })\n        } else {\n            this.setState({\n                contractee: true,\n                contractor: false\n            })\n        }\n    }\n\n    handleSubmittedStatus = () => {\n        this.setState({ submitted: true })\n    }\n\n    handleFormSubmit = (e) => {\n        console.log(\"signed up\")\n        let { username, email, phone, country, city, contractee, contractor } = this.state\n\n        this.props.onsignUp()\n        this.props.loggedIn()\n\n        fetch(URL + \"/users\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"Application/json\",\n                Accept: \"Application/json\"\n            },\n            body: JSON.stringify({\n                username: username,\n                email: email,\n                city: city,\n                country: country,\n                phone: phone,\n                contractee: contractee,\n                contractor: contractor\n            })\n        })\n            .then(response => response.json())\n            .then(user => {\n                console.log(user);\n                if (user.contractor) {\n                    fetch(URL + \"/contractors\", {\n                        method: \"POST\",\n                        headers: {\n                            \"Content-Type\": \"Application/json\",\n                            Accept: \"Application/json\"\n                        },\n                        body: JSON.stringify({\n                            user_id: user.id\n                        })\n                    })\n                        .then(response => response.json())\n                        .then(currentUser => {\n                            this.props.onSetCurrentUser(\"contractor\")\n                        })\n                } else {\n                    fetch(URL + \"/contractees\", {\n                        method: \"POST\",\n                        headers: {\n                            \"Content-Type\": \"Application/json\",\n                            Accept: \"Application/json\"\n                        },\n                        body: JSON.stringify({\n                            user_id: user.id\n                        })\n                    })\n                        .then(response => response.json())\n                        .then(currentUser => {\n                            this.props.onSetCurrentUser(\"contractee\")\n                        })\n                }\n            })\n            .then(this.setState({\n                username: \"\",\n                email: \"\",\n                phone: 0,\n                country: \"\",\n                city: \"\",\n                contractee: false,\n                contractor: false\n            }))\n        this.handleSubmittedStatus()\n    }\n\n    render() {\n        if (this.state.submitted === true && this.props.signup == false) {\n            return <Redirect to='/' />\n        } else {\n            return (\n                <div className='space_between_lines'>\n                    <form onSubmit={(e) => this.handleFormSubmit(e)} className='space_between_lines'>\n                        <input type='text' id=\"username\" placeholder='username' onChange={(e) => this.handleUsername(e)} value={this.state.username} /><br />\n                        <input type='text' id='city' placeholder='city' onChange={(e) => this.handleCity(e)} value={this.state.city} /><br />\n                        <input type='text' id='country' placeholder='country' onChange={(e) => this.handleCountry(e)} value={this.state.country} /><br />\n                        <input type='text' id='email' placeholder='email' onChange={(e) => this.handleEmail(e)} value={this.state.email} /><br />\n                        <input type='number' id='number' placeholder='phone' onChange={(e) => this.handlePhone(e)} value={this.state.phone} /><br />\n                        <select onChange={(e) => this.handlePersonSelection(e)}>\n                            <option value=\"\" selected disabled hidden>Choose here</option>\n                            <option value='contractee' selected=\"selected\">Contractee</option>\n                            <option value='contractor'>Contractor</option>\n                        </select><br />\n                        <input type='submit' value=\"Submit\" />\n                    </form>\n                </div>\n            )\n        }\n    }\n}\n\nexport default SignupForm\n"]},"metadata":{},"sourceType":"module"}