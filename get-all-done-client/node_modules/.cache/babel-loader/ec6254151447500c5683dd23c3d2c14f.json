{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/Desktop/G_A_D-project/G_A_D-get-all-done-frontend/get-all-done-client/src/containers/SignupForm.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom'; // import Home from './Home'\n\nconst URL = \"http://localhost:3000\";\nexport class SignupForm extends Component {\n  // let { onSetCurrentUser, onsignUp, onLoggedIn, signup } = this.props\n  // let { username, email, phone, country, city, contractee, contractor, submitted } = this.state\n  constructor() {\n    super();\n\n    this.handleInputData = e => {\n      this.setState({\n        [e.target.id]: e.target.value\n      });\n    };\n\n    this.handlePersonSelection = e => {\n      if (e.target.value === \"contractor\") {\n        this.setState({\n          contractee: false,\n          contractor: true\n        });\n      } else {\n        this.setState({\n          contractee: true,\n          contractor: false\n        });\n      }\n    };\n\n    this.submittedStatus = () => {\n      this.setState({\n        submitted: true\n      });\n    };\n\n    this.handleFormSubmit = e => {\n      let _this$props = this.props,\n          onSetCurrentUser = _this$props.onSetCurrentUser,\n          onSignUp = _this$props.onSignUp,\n          onLoggedIn = _this$props.onLoggedIn;\n      let _this$state = this.state,\n          username = _this$state.username,\n          email = _this$state.email,\n          phone = _this$state.phone,\n          country = _this$state.country,\n          city = _this$state.city,\n          contractee = _this$state.contractee,\n          contractor = _this$state.contractor,\n          services = _this$state.services;\n      onSignUp();\n      onLoggedIn();\n      fetch(URL + \"/users\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"Application/json\",\n          Accept: \"Application/json\"\n        },\n        body: JSON.stringify({\n          username: username,\n          email: email,\n          city: city,\n          country: country,\n          phone: phone,\n          contractee: contractee,\n          contractor: contractor\n        })\n      }).then(response => response.json()).then(user => {\n        console.log(user);\n\n        if (user.contractor) {\n          fetch(URL + \"/contractors\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"Application/json\",\n              Accept: \"Application/json\"\n            },\n            body: JSON.stringify({\n              user_id: user.id,\n              projects_completed: 0,\n              services: services\n            })\n          }).then(response => response.json()).then(currentUser => {\n            onSetCurrentUser(\"contractor\");\n          });\n        } else {\n          fetch(URL + \"/contractees\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"Application/json\",\n              Accept: \"Application/json\"\n            },\n            body: JSON.stringify({\n              user_id: user.id\n            })\n          }).then(response => response.json()).then(currentUser => {\n            onSetCurrentUser(\"contractee\");\n          });\n        }\n      }).then(this.setState({\n        username: \"\",\n        email: \"\",\n        phone: 0,\n        country: \"\",\n        city: \"\",\n        contractee: false,\n        contractor: false\n      }));\n      this.submittedStatus();\n    };\n\n    this.state = {\n      username: \"\",\n      email: \"\",\n      phone: 0,\n      country: \"\",\n      city: \"\",\n      services: [],\n      contractee: false,\n      contractor: false,\n      submitted: false\n    };\n  }\n\n  render() {\n    let signup = this.props.signup;\n    let _this$state2 = this.state,\n        username = _this$state2.username,\n        email = _this$state2.email,\n        phone = _this$state2.phone,\n        country = _this$state2.country,\n        city = _this$state2.city,\n        contractor = _this$state2.contractor,\n        submitted = _this$state2.submitted,\n        projects_completed = _this$state2.projects_completed,\n        services = _this$state2.services;\n\n    if (submitted === true || signup == false) {\n      return React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(\"div\", {\n        className: \"space_between_lines\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: e => this.handleFormSubmit(e),\n        className: \"space_between_lines\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"Username:\"), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"username\",\n        placeholder: \"username\",\n        onChange: e => this.handleInputData(e),\n        value: username,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"City:\"), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        placeholder: \"city\",\n        onChange: e => this.handleInputData(e),\n        value: city,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"Country:\"), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"country\",\n        placeholder: \"country\",\n        onChange: e => this.handleInputData(e),\n        value: country,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"Email:\"), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"email\",\n        placeholder: \"email\",\n        onChange: e => this.handleInputData(e),\n        value: email,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"Contact Number:\"), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"number\",\n        placeholder: \"phone\",\n        onChange: e => this.handleInputData(e),\n        value: phone,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"Select one:\"), React.createElement(\"select\", {\n        onChange: e => this.handlePersonSelection(e),\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"contractee\",\n        selected: true,\n        disabled: true,\n        hidden: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"Choose here\"), React.createElement(\"option\", {\n        value: \"contractee\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"Contractee\"), React.createElement(\"option\", {\n        value: \"contractor\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, \"Contractor\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }), contractor ? React.createElement(React.Fragment, null, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"Services:\"), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"services\",\n        placeholder: \"services\",\n        onChange: e => this.handleInputData(e),\n        value: services,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      })) : React.createElement(React.Fragment, null), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      })));\n    }\n  }\n\n}\nexport default SignupForm;","map":{"version":3,"sources":["/Users/flatironschool/Desktop/G_A_D-project/G_A_D-get-all-done-frontend/get-all-done-client/src/containers/SignupForm.js"],"names":["React","Component","Redirect","URL","SignupForm","constructor","handleInputData","e","setState","target","id","value","handlePersonSelection","contractee","contractor","submittedStatus","submitted","handleFormSubmit","props","onSetCurrentUser","onSignUp","onLoggedIn","state","username","email","phone","country","city","services","fetch","method","headers","Accept","body","JSON","stringify","then","response","json","user","console","log","user_id","projects_completed","currentUser","render","signup"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom';\n// import Home from './Home'\n\nconst URL = \"http://localhost:3000\"\n\nexport class SignupForm extends Component {\n    // let { onSetCurrentUser, onsignUp, onLoggedIn, signup } = this.props\n    // let { username, email, phone, country, city, contractee, contractor, submitted } = this.state\n    constructor() {\n        super()\n        this.state = {\n            username: \"\",\n            email: \"\",\n            phone: 0,\n            country: \"\",\n            city: \"\",\n            services: [],\n            contractee: false,\n            contractor: false,\n            submitted: false\n        }\n\n    }\n\n    handleInputData = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n\n    handlePersonSelection = (e) => {\n        if (e.target.value === \"contractor\") {\n            this.setState({\n                contractee: false,\n                contractor: true\n            })\n        } else {\n            this.setState({\n                contractee: true,\n                contractor: false\n            })\n        }\n    }\n\n    submittedStatus = () => {\n        this.setState({ submitted: true })\n    }\n\n    handleFormSubmit = (e) => {\n        let { onSetCurrentUser, onSignUp, onLoggedIn } = this.props\n        let { username, email, phone, country, city, contractee, contractor, services } = this.state\n        onSignUp()\n        onLoggedIn()\n        fetch(URL + \"/users\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"Application/json\",\n                Accept: \"Application/json\"\n            },\n            body: JSON.stringify({\n                username: username,\n                email: email,\n                city: city,\n                country: country,\n                phone: phone,\n                contractee: contractee,\n                contractor: contractor\n            })\n        })\n            .then(response => response.json())\n            .then(user => {\n                console.log(user);\n                if (user.contractor) {\n                    fetch(URL + \"/contractors\", {\n                        method: \"POST\",\n                        headers: {\n                            \"Content-Type\": \"Application/json\",\n                            Accept: \"Application/json\"\n                        },\n                        body: JSON.stringify({\n                            user_id: user.id,\n                            projects_completed: 0,\n                            services: services\n                        })\n                    })\n                        .then(response => response.json())\n                        .then(currentUser => {\n                            onSetCurrentUser(\"contractor\")\n                        })\n                } else {\n                    fetch(URL + \"/contractees\", {\n                        method: \"POST\",\n                        headers: {\n                            \"Content-Type\": \"Application/json\",\n                            Accept: \"Application/json\"\n                        },\n                        body: JSON.stringify({\n                            user_id: user.id\n                        })\n                    })\n                        .then(response => response.json())\n                        .then(currentUser => {\n                            onSetCurrentUser(\"contractee\")\n                        })\n                }\n            })\n            .then(this.setState({\n                username: \"\",\n                email: \"\",\n                phone: 0,\n                country: \"\",\n                city: \"\",\n                contractee: false,\n                contractor: false\n            }))\n        this.submittedStatus()\n    }\n\n    render() {\n        let { signup } = this.props\n        let { username, email, phone, country, city, contractor, submitted, projects_completed, services } = this.state\n        if (submitted === true || signup == false) {\n            return <Redirect to='/' />\n        } else {\n            return (\n                <div className='space_between_lines'>\n                    <form onSubmit={(e) => this.handleFormSubmit(e)} className='space_between_lines'>\n                        <label>Username:</label>\n                        <input type='text' id=\"username\" placeholder='username' onChange={(e) => this.handleInputData(e)} value={username} required /><br />\n                        <label>City:</label>\n                        <input type='text' id='city' placeholder='city' onChange={(e) => this.handleInputData(e)} value={city} required /><br />\n                        <label>Country:</label>\n                        <input type='text' id='country' placeholder='country' onChange={(e) => this.handleInputData(e)} value={country} required /><br />\n                        <label>Email:</label>\n                        <input type='text' id='email' placeholder='email' onChange={(e) => this.handleInputData(e)} value={email} required /><br />\n                        <label>Contact Number:</label>\n                        <input type='text' id='number' placeholder='phone' onChange={(e) => this.handleInputData(e)} value={phone} required /><br />\n                        <label>Select one:</label>\n                        <select onChange={(e) => this.handlePersonSelection(e)} required>\n                            <option value=\"contractee\" selected disabled hidden>Choose here</option>\n                            <option value='contractee' >Contractee</option>\n                            <option value='contractor'>Contractor</option>\n                        </select><br />\n                        {contractor ?\n                            <>\n                                <label>Services:</label>\n                                <input type='text' id='services' placeholder='services' onChange={(e) => this.handleInputData(e)} value={services} required /><br />\n                            </>\n                            : <></>}\n                        <input type='submit' value=\"Submit\" />\n                    </form>\n                </div>\n            )\n        }\n    }\n}\n\nexport default SignupForm\n"]},"metadata":{},"sourceType":"module"}