{"ast":null,"code":"import _objectSpread from \"/Users/flatironschool/Desktop/G_A_D-project/G_A_D-get-all-done-frontend/get-all-done-client/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/flatironschool/Desktop/G_A_D-project/G_A_D-get-all-done-frontend/get-all-done-client/src/containers/App.js\";\nimport React, { Component } from 'react';\nimport Home from '../components/Home';\nimport { Redirect, useHistory } from 'react-router-dom';\nimport { api } from '../services/api';\nconst PostsURL = \"http://localhost:3000/posts\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.onSignUp = () => {\n      this.setState({\n        signup: !this.state.signup,\n        login: false\n      });\n    };\n\n    this.onLogin = data => {\n      const updatedState = _objectSpread({}, this.state.auth, {\n        user: data\n      });\n\n      localStorage.setItem('token', data.jwt);\n      this.setState({\n        auth: updatedState,\n        login: !this.state.login,\n        signup: false\n      });\n    };\n\n    this.onLoggedIn = () => {\n      this.setState({\n        loggedIn: true\n      });\n    };\n\n    this.onLogOut = () => {\n      localStorage.removeItem('token');\n      this.setState({\n        auth: {\n          user: {}\n        },\n        signup: false,\n        login: false,\n        loggedInAs: \"\",\n        posts: [],\n        loggedIn: false\n      }, window.location.replace(\"http://localhost:3001/\")); // this.setState({ signup: false, login: false, loggedInAs: \"\", posts: [], loggedIn: false })\n    };\n\n    this.onSetCurrentUser = signedInUser => {\n      this.setState({\n        loggedInAs: signedInUser\n      });\n    };\n\n    this.state = {\n      signup: false,\n      login: false,\n      loggedInAs: \"\",\n      loggedIn: false,\n      posts: [],\n      auth: {\n        user: {}\n      }\n    };\n  }\n\n  componentDidMount() {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      // make a request to the backend and find our user\n      api.auth.getCurrentUser().then(user => {\n        console.log(user);\n\n        const updatedState = _objectSpread({}, this.state.auth, {\n          user: user\n        });\n\n        this.setState({\n          auth: updatedState\n        });\n      });\n    }\n\n    fetch(PostsURL).then(resp => resp.json()).then(posts => {\n      console.log(posts);\n      this.setState({\n        posts: posts\n      });\n    });\n  }\n\n  render() {\n    let _this$state = this.state,\n        signup = _this$state.signup,\n        login = _this$state.login,\n        loggedIn = _this$state.loggedIn,\n        loggedInAs = _this$state.loggedInAs,\n        posts = _this$state.posts;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Home, {\n      signup: signup,\n      login: login,\n      loggedIn: loggedIn,\n      loggedInAs: loggedInAs,\n      posts: posts,\n      onSignUp: this.onSignUp,\n      onLogin: this.onLogin,\n      onLoggedIn: this.onLoggedIn,\n      onLogOut: this.onLogOut,\n      onSetCurrentUser: this.onSetCurrentUser,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/flatironschool/Desktop/G_A_D-project/G_A_D-get-all-done-frontend/get-all-done-client/src/containers/App.js"],"names":["React","Component","Home","Redirect","useHistory","api","PostsURL","App","constructor","onSignUp","setState","signup","state","login","onLogin","data","updatedState","auth","user","localStorage","setItem","jwt","onLoggedIn","loggedIn","onLogOut","removeItem","loggedInAs","posts","window","location","replace","onSetCurrentUser","signedInUser","componentDidMount","token","getItem","getCurrentUser","then","console","log","fetch","resp","json","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Home from '../components/Home'\nimport { Redirect, useHistory } from 'react-router-dom';\nimport { api } from '../services/api';\n\nconst PostsURL = \"http://localhost:3000/posts\"\nclass App extends Component {\n    constructor() {\n        super()\n        this.state = {\n            signup: false,\n            login: false,\n            loggedInAs: \"\",\n            loggedIn: false,\n            posts: [],\n            auth: {\n                user: {}\n            }\n        }\n    }\n\n    componentDidMount() {\n        const token = localStorage.getItem('token');\n        if (token) {\n            // make a request to the backend and find our user\n            api.auth.getCurrentUser().then(user => {\n                console.log(user)\n                const updatedState = { ...this.state.auth, user: user };\n                this.setState({ auth: updatedState });\n            });\n        }\n\n        fetch(PostsURL)\n            .then(resp => resp.json())\n            .then(posts => {\n                console.log(posts)\n                this.setState({ posts: posts })\n            })\n    }\n\n    onSignUp = () => {\n        this.setState({ signup: !this.state.signup, login: false })\n    }\n\n    onLogin = (data) => {\n        const updatedState = { ...this.state.auth, user: data };\n        localStorage.setItem('token', data.jwt);\n        this.setState({ auth: updatedState, login: !this.state.login, signup: false });\n    }\n\n    onLoggedIn = () => {\n        this.setState({ loggedIn: true })\n    }\n\n    onLogOut = () => {\n        localStorage.removeItem('token');\n        this.setState({ auth: { user: {} }, signup: false, login: false, loggedInAs: \"\", posts: [], loggedIn: false }, window.location.replace(\"http://localhost:3001/\"));\n        // this.setState({ signup: false, login: false, loggedInAs: \"\", posts: [], loggedIn: false })\n\n    }\n\n    onSetCurrentUser = (signedInUser) => {\n        this.setState({ loggedInAs: signedInUser })\n    }\n\n    render() {\n        let { signup, login, loggedIn, loggedInAs, posts } = this.state\n        return (\n            <div>\n                <Home\n                    signup={signup}\n                    login={login}\n                    loggedIn={loggedIn}\n                    loggedInAs={loggedInAs}\n                    posts={posts}\n                    onSignUp={this.onSignUp}\n                    onLogin={this.onLogin}\n                    onLoggedIn={this.onLoggedIn}\n                    onLogOut={this.onLogOut}\n                    onSetCurrentUser={this.onSetCurrentUser}\n                />\n            </div>\n        )\n    }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}