{"ast":null,"code":"const API_ROOT = `http://localhost:3000/api/v1`;\nconst token = localStorage.getItem('token');\nconst headers = {\n  'Content-Type': 'application/json',\n  Accepts: 'application/json',\n  Authorization: token\n};\n\nconst login = data => {\n  return fetch(`${API_ROOT}/auth`, {\n    method: 'POST',\n    headers,\n    body: JSON.stringify(data)\n  }).then(resp => resp.json());\n};\n\nconst getCurrentUser = () => {\n  console.log(\"getting current user\", headers);\n  return fetch(`${API_ROOT}/current_user`, {\n    headers\n  }).then(res => {\n    console.log(res);\n    return res.json();\n  });\n};\n\nconst createUser = data => {\n  fetch(URL + \"/users\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"Application/json\",\n      Accept: \"Application/json\"\n    },\n    body: JSON.stringify({\n      username: data.username,\n      email: data.email,\n      city: data.city,\n      country: data.country,\n      phone: data.phone,\n      contractee: data.contractee,\n      contractor: data.contractor\n    })\n  }).then(response => response.json()).then(user => {\n    console.log(user);\n\n    if (user.contractor) {\n      fetch(URL + \"/contractors\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"Application/json\",\n          Accept: \"Application/json\"\n        },\n        body: JSON.stringify({\n          user_id: user.id,\n          projects_completed: 0,\n          password: data.password,\n          services: data.services\n        })\n      }).then(response => response.json()); // .then(currentUser => {\n      //     onSetCurrentUser(\"contractor\")\n      // })\n    } else {\n      fetch(URL + \"/contractees\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"Application/json\",\n          Accept: \"Application/json\"\n        },\n        body: JSON.stringify({\n          user_id: user.id,\n          password: data.password\n        })\n      }).then(response => response.json()); //         .then(currentUser => {\n      //             onSetCurrentUser(\"contractee\")\n      //         })\n    }\n  }).then(this.setState({\n    username: \"\",\n    email: \"\",\n    phone: 0,\n    country: \"\",\n    city: \"\",\n    contractee: false,\n    contractor: false,\n    password: \"\"\n  }));\n};\n\nexport const api = {\n  auth: {\n    login,\n    getCurrentUser\n  },\n  // paintings: {\n  //   getPaintings\n  // }\n  user: {\n    createUser\n  }\n};","map":{"version":3,"sources":["/Users/flatironschool/Desktop/G_A_D-project/G_A_D-get-all-done-frontend/get-all-done-client/src/services/api.js"],"names":["API_ROOT","token","localStorage","getItem","headers","Accepts","Authorization","login","data","fetch","method","body","JSON","stringify","then","resp","json","getCurrentUser","console","log","res","createUser","URL","Accept","username","email","city","country","phone","contractee","contractor","response","user","user_id","id","projects_completed","password","services","setState","api","auth"],"mappings":"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","sourcesContent":["const API_ROOT = `http://localhost:3000/api/v1`;\nconst token = localStorage.getItem('token');\n\nconst headers = {\n    'Content-Type': 'application/json',\n    Accepts: 'application/json',\n    Authorization: token\n};\n\n\nconst login = data => {\n    return fetch(`${API_ROOT}/auth`, {\n        method: 'POST',\n        headers,\n        body: JSON.stringify(data)\n    }).then(resp => resp.json());\n};\n\nconst getCurrentUser = () => {\n    console.log(\"getting current user\", headers)\n    return fetch(`${API_ROOT}/current_user`, {\n        headers\n    }).then(res => {\n        console.log(res)\n        return res.json()\n    });\n};\n\nconst createUser = (data) => {\n    fetch(URL + \"/users\", {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"Application/json\",\n            Accept: \"Application/json\"\n        },\n        body: JSON.stringify({\n            username: data.username,\n            email: data.email,\n            city: data.city,\n            country: data.country,\n            phone: data.phone,\n            contractee: data.contractee,\n            contractor: data.contractor\n        })\n    })\n        .then(response => response.json())\n        .then(user => {\n            console.log(user);\n            if (user.contractor) {\n                fetch(URL + \"/contractors\", {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"Application/json\",\n                        Accept: \"Application/json\"\n                    },\n                    body: JSON.stringify({\n                        user_id: user.id,\n                        projects_completed: 0,\n                        password: data.password,\n                        services: data.services\n                    })\n                })\n                    .then(response => response.json())\n                // .then(currentUser => {\n                //     onSetCurrentUser(\"contractor\")\n                // })\n            } else {\n                fetch(URL + \"/contractees\", {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"Application/json\",\n                        Accept: \"Application/json\"\n                    },\n                    body: JSON.stringify({\n                        user_id: user.id,\n                        password: data.password\n                    })\n                })\n                    .then(response => response.json())\n                //         .then(currentUser => {\n                //             onSetCurrentUser(\"contractee\")\n                //         })\n            }\n        })\n        .then(this.setState({\n            username: \"\",\n            email: \"\",\n            phone: 0,\n            country: \"\",\n            city: \"\",\n            contractee: false,\n            contractor: false,\n            password: \"\"\n        }))\n}\n\nexport const api = {\n    auth: {\n        login,\n        getCurrentUser\n    },\n    // paintings: {\n    //   getPaintings\n    // }\n    user: {\n        createUser\n    }\n};\n"]},"metadata":{},"sourceType":"module"}