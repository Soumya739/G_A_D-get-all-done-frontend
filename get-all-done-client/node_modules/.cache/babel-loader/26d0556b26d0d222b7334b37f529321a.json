{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/Desktop/G_A_D-project/G_A_D-get-all-done-frontend/get-all-done-client/src/components/Signup.js\";\nimport React, { Component } from 'react';\nconst URL = \"http://localhost:3000\";\nexport class Signup extends Component {\n  constructor() {\n    super();\n\n    this.handleUsername = e => {\n      this.setState({\n        username: e.target.value\n      });\n    };\n\n    this.handleEmail = e => {\n      this.setState({\n        email: e.target.value\n      });\n    };\n\n    this.handlePhone = e => {\n      this.setState({\n        phone: e.target.value\n      });\n    };\n\n    this.handleCountry = e => {\n      this.setState({\n        country: e.target.value\n      });\n    };\n\n    this.handleCity = e => {\n      this.setState({\n        city: e.target.value\n      });\n    };\n\n    this.handlePersonSelection = e => {\n      if (e.target.value === \"contractor\") {\n        this.setState({\n          contractee: false,\n          contractor: true\n        });\n      } else {\n        this.setState({\n          contractee: true,\n          contractor: false\n        });\n      }\n    };\n\n    this.handleFormSubmit = e => {\n      let _this$state = this.state,\n          username = _this$state.username,\n          email = _this$state.email,\n          phone = _this$state.phone,\n          country = _this$state.country,\n          city = _this$state.city,\n          contractee = _this$state.contractee,\n          contractor = _this$state.contractor;\n      e.preventDefault();\n      fetch(URL + \"/users\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"Application/json\",\n          Accept: \"Application/json\"\n        },\n        body: JSON.stringify({\n          username: username,\n          email: email,\n          city: city,\n          country: country,\n          phone: phone,\n          contractee: contractee,\n          contractor: contractor\n        })\n      }).then(response => response.json()).then(user => {\n        console.log(user);\n\n        if (user.contractor) {\n          fetch(URL + \"/contractors\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"Application/json\",\n              Accept: \"Application/json\"\n            },\n            body: JSON.stringify({\n              user_id: user.id\n            })\n          }).then(response => response.json()).then(currentUser => {\n            this.props.onSetCurrentUserId(currentUser.id);\n          });\n        } else {\n          fetch(URL + \"/contractees\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"Application/json\",\n              Accept: \"Application/json\"\n            },\n            body: JSON.stringify({\n              user_id: user.id\n            })\n          }).then(response => response.json()).then(currentUser => {\n            this.props.onSetCurrentUserId(currentUser.id);\n          });\n        } // if (user) {\n        //     afterLogIn(user)\n        // } else {\n        //     alert (\"user not registered\")\n        // }\n\n      }).then(this.setState({\n        username: \"\",\n        email: \"\",\n        phone: 0,\n        country: \"\",\n        city: \"\",\n        contractee: false,\n        contractor: false\n      }));\n    };\n\n    this.state = {\n      username: \"\",\n      email: \"\",\n      phone: 0,\n      country: \"\",\n      city: \"\",\n      contractee: false,\n      contractor: false\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"space_between_lines\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: e => this.handleFormSubmit(e),\n      className: \"space_between_lines\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"username\",\n      onChange: e => this.handleUsername(e),\n      value: this.state.username,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"city\",\n      onChange: e => this.handleCity(e),\n      value: this.state.city,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"country\",\n      onChange: e => this.handleCountry(e),\n      value: this.state.country,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"email\",\n      onChange: e => this.handleEmail(e),\n      value: this.state.email,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"number\",\n      placeholder: \"phone\",\n      onChange: e => this.handlePhone(e),\n      value: this.state.phone,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), React.createElement(\"select\", {\n      onChange: e => this.handlePersonSelection(e),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, React.createElement(\"option\", {\n      value: \"\",\n      selected: true,\n      disabled: true,\n      hidden: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"Choose here\"), React.createElement(\"option\", {\n      value: \"contractee\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"Contractee\"), React.createElement(\"option\", {\n      value: \"contractor\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, \"Contractor\")), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"Submit\",\n      value: \"Submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    })));\n  }\n\n}\nexport default Signup;","map":{"version":3,"sources":["/Users/flatironschool/Desktop/G_A_D-project/G_A_D-get-all-done-frontend/get-all-done-client/src/components/Signup.js"],"names":["React","Component","URL","Signup","constructor","handleUsername","e","setState","username","target","value","handleEmail","email","handlePhone","phone","handleCountry","country","handleCity","city","handlePersonSelection","contractee","contractor","handleFormSubmit","state","preventDefault","fetch","method","headers","Accept","body","JSON","stringify","then","response","json","user","console","log","user_id","id","currentUser","props","onSetCurrentUserId","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\n\nconst URL = \"http://localhost:3000\"\n\nexport class Signup extends Component {\n    constructor() {\n        super()\n        this.state = {\n            username: \"\",\n            email: \"\",\n            phone: 0,\n            country: \"\",\n            city: \"\",\n            contractee: false,\n            contractor: false\n        }\n    }\n\n    handleUsername = (e) => {\n        this.setState({\n            username: e.target.value\n        })\n    }\n\n    handleEmail = (e) => {\n        this.setState({\n            email: e.target.value\n        })\n    }\n\n    handlePhone = (e) => {\n        this.setState({\n            phone: e.target.value\n        })\n    }\n\n    handleCountry = (e) => {\n        this.setState({\n            country: e.target.value\n        })\n    }\n\n    handleCity = (e) => {\n        this.setState({\n            city: e.target.value\n        })\n    }\n\n    handlePersonSelection = (e) => {\n        if (e.target.value === \"contractor\") {\n            this.setState({\n                contractee: false,\n                contractor: true\n            })\n        } else {\n            this.setState({\n                contractee: true,\n                contractor: false\n            })\n        }\n    }\n\n    handleFormSubmit = (e) => {\n        let { username, email, phone, country, city, contractee, contractor } = this.state\n        e.preventDefault()\n        fetch(URL + \"/users\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"Application/json\",\n                Accept: \"Application/json\"\n            },\n            body: JSON.stringify({\n                username: username,\n                email: email,\n                city: city,\n                country: country,\n                phone: phone,\n                contractee: contractee,\n                contractor: contractor\n            })\n        })\n            .then(response => response.json())\n            .then(user => {\n                console.log(user);\n                if (user.contractor) {\n                    fetch(URL + \"/contractors\", {\n                        method: \"POST\",\n                        headers: {\n                            \"Content-Type\": \"Application/json\",\n                            Accept: \"Application/json\"\n                        },\n                        body: JSON.stringify({\n                            user_id: user.id\n                        })\n                    })\n                        .then(response => response.json())\n                        .then(currentUser => {\n                            this.props.onSetCurrentUserId(currentUser.id)\n                        })\n                } else {\n                    fetch(URL + \"/contractees\", {\n                        method: \"POST\",\n                        headers: {\n                            \"Content-Type\": \"Application/json\",\n                            Accept: \"Application/json\"\n                        },\n                        body: JSON.stringify({\n                            user_id: user.id\n                        })\n                    })\n                        .then(response => response.json())\n                        .then(currentUser => {\n                            this.props.onSetCurrentUserId(currentUser.id)\n                        })\n                }\n                // if (user) {\n                //     afterLogIn(user)\n                // } else {\n                //     alert (\"user not registered\")\n                // }\n            })\n            .then(this.setState({\n                username: \"\",\n                email: \"\",\n                phone: 0,\n                country: \"\",\n                city: \"\",\n                contractee: false,\n                contractor: false\n            }))\n    }\n\n    render() {\n        return (\n            <div className='space_between_lines'>\n                <form onSubmit={(e) => this.handleFormSubmit(e)} className='space_between_lines'>\n                    <input type='text' placeholder='username' onChange={(e) => this.handleUsername(e)} value={this.state.username} /><br />\n                    <input type='text' placeholder='city' onChange={(e) => this.handleCity(e)} value={this.state.city} /><br />\n                    <input type='text' placeholder='country' onChange={(e) => this.handleCountry(e)} value={this.state.country} /><br />\n                    <input type='text' placeholder='email' onChange={(e) => this.handleEmail(e)} value={this.state.email} /><br />\n                    <input type='number' placeholder='phone' onChange={(e) => this.handlePhone(e)} value={this.state.phone} /><br />\n                    <select onChange={(e) => this.handlePersonSelection(e)}>\n                        <option value=\"\" selected disabled hidden>Choose here</option>\n                        <option value='contractee'>Contractee</option>\n                        <option value='contractor'>Contractor</option>\n                    </select><br />\n                    <input type='Submit' value=\"Submit\" />\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default Signup\n"]},"metadata":{},"sourceType":"module"}