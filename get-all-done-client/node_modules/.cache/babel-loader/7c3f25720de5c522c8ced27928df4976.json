{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/Desktop/G_A_D-project/G_A_D-get-all-done-frontend/get-all-done-client/src/components/SignupForm.js\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, NavLink, Redirect, withRouter } from 'react-router-dom';\nimport Home from './Home';\nconst URL = \"http://localhost:3000\";\nexport class SignupForm extends Component {\n  constructor() {\n    super();\n\n    this.handleFormData = e => {\n      console.log(e.target.id, e.target.value);\n      this.setState({\n        username: e.target.value\n      });\n    };\n\n    this.handlePersonSelection = e => {\n      if (e.target.value === \"contractor\") {\n        this.setState({\n          contractee: false,\n          contractor: true\n        });\n      } else {\n        this.setState({\n          contractee: true,\n          contractor: false\n        });\n      }\n    };\n\n    this.handleFormSubmit = e => {\n      console.log(\"signed up\");\n      let _this$state = this.state,\n          username = _this$state.username,\n          email = _this$state.email,\n          phone = _this$state.phone,\n          country = _this$state.country,\n          city = _this$state.city,\n          contractee = _this$state.contractee,\n          contractor = _this$state.contractor;\n      e.preventDefault();\n      this.props.signUp();\n      this.props.loggedIn();\n      fetch(URL + \"/users\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"Application/json\",\n          Accept: \"Application/json\"\n        },\n        body: JSON.stringify({\n          username: username,\n          email: email,\n          city: city,\n          country: country,\n          phone: phone,\n          contractee: contractee,\n          contractor: contractor\n        })\n      }).then(response => response.json()).then(user => {\n        console.log(user);\n\n        if (user.contractor) {\n          fetch(URL + \"/contractors\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"Application/json\",\n              Accept: \"Application/json\"\n            },\n            body: JSON.stringify({\n              user_id: user.id\n            })\n          }).then(response => response.json()).then(currentUser => {\n            this.props.onSetCurrentUser(currentUser.id, \"contractor\");\n          });\n        } else {\n          fetch(URL + \"/contractees\", {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"Application/json\",\n              Accept: \"Application/json\"\n            },\n            body: JSON.stringify({\n              user_id: user.id\n            })\n          }).then(response => response.json()).then(currentUser => {\n            this.props.onSetCurrentUser(currentUser.id, \"contractee\");\n          });\n        }\n      }).then(this.setState({\n        username: \"\",\n        email: \"\",\n        phone: 0,\n        country: \"\",\n        city: \"\",\n        contractee: false,\n        contractor: false\n      }));\n    };\n\n    this.state = {\n      username: \"\",\n      email: \"\",\n      phone: 0,\n      country: \"\",\n      city: \"\",\n      contractee: false,\n      contractor: false,\n      submitted: false\n    };\n  }\n\n  render() {\n    if (this.state.submitted === true) {\n      return React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      });\n    } else {\n      return React.createElement(\"div\", {\n        className: \"space_between_lines\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: e => this.handleFormSubmit(e),\n        className: \"space_between_lines\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        id: \"username\",\n        placeholder: \"username\",\n        onChange: e => this.handleFormData(e),\n        value: this.state.username,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"city\",\n        placeholder: \"city\",\n        onChange: e => this.handleFormData(e),\n        value: this.state.city,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"country\",\n        placeholder: \"country\",\n        onChange: e => this.handleFormData(e),\n        value: this.state.country,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"email\",\n        placeholder: \"email\",\n        onChange: e => this.handleFormData(e),\n        value: this.state.email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"number\",\n        id: \"number\",\n        placeholder: \"phone\",\n        onChange: e => this.handleFormData(e),\n        value: this.state.phone,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }), React.createElement(\"select\", {\n        onChange: e => this.handlePersonSelection(e),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        value: \"\",\n        selected: true,\n        disabled: true,\n        hidden: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"Choose here\"), React.createElement(\"option\", {\n        value: \"contractee\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"Contractee\"), React.createElement(\"option\", {\n        value: \"contractor\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"Contractor\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        value: \"Submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      })));\n    }\n  }\n\n}\nexport default SignupForm;","map":{"version":3,"sources":["/Users/flatironschool/Desktop/G_A_D-project/G_A_D-get-all-done-frontend/get-all-done-client/src/components/SignupForm.js"],"names":["React","Component","BrowserRouter","Router","Route","NavLink","Redirect","withRouter","Home","URL","SignupForm","constructor","handleFormData","e","console","log","target","id","value","setState","username","handlePersonSelection","contractee","contractor","handleFormSubmit","state","email","phone","country","city","preventDefault","props","signUp","loggedIn","fetch","method","headers","Accept","body","JSON","stringify","then","response","json","user","user_id","currentUser","onSetCurrentUser","submitted","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { BrowserRouter as Router, Route, NavLink, Redirect, withRouter } from 'react-router-dom';\nimport Home from './Home'\n\nconst URL = \"http://localhost:3000\"\n\nexport class SignupForm extends Component {\n    constructor() {\n        super()\n        this.state = {\n            username: \"\",\n            email: \"\",\n            phone: 0,\n            country: \"\",\n            city: \"\",\n            contractee: false,\n            contractor: false,\n            submitted: false\n        }\n    }\n\n    handleFormData = (e) => {\n        console.log(e.target.id, e.target.value)\n        this.setState({\n            username: e.target.value\n        })\n    }\n\n    handlePersonSelection = (e) => {\n        if (e.target.value === \"contractor\") {\n            this.setState({\n                contractee: false,\n                contractor: true\n            })\n        } else {\n            this.setState({\n                contractee: true,\n                contractor: false\n            })\n        }\n    }\n\n    handleFormSubmit = (e) => {\n        console.log(\"signed up\")\n        let { username, email, phone, country, city, contractee, contractor } = this.state\n        e.preventDefault()\n        this.props.signUp()\n        this.props.loggedIn()\n        fetch(URL + \"/users\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"Application/json\",\n                Accept: \"Application/json\"\n            },\n            body: JSON.stringify({\n                username: username,\n                email: email,\n                city: city,\n                country: country,\n                phone: phone,\n                contractee: contractee,\n                contractor: contractor\n            })\n        })\n            .then(response => response.json())\n            .then(user => {\n                console.log(user);\n                if (user.contractor) {\n                    fetch(URL + \"/contractors\", {\n                        method: \"POST\",\n                        headers: {\n                            \"Content-Type\": \"Application/json\",\n                            Accept: \"Application/json\"\n                        },\n                        body: JSON.stringify({\n                            user_id: user.id\n                        })\n                    })\n                        .then(response => response.json())\n                        .then(currentUser => {\n                            this.props.onSetCurrentUser(currentUser.id, \"contractor\")\n                        })\n                } else {\n                    fetch(URL + \"/contractees\", {\n                        method: \"POST\",\n                        headers: {\n                            \"Content-Type\": \"Application/json\",\n                            Accept: \"Application/json\"\n                        },\n                        body: JSON.stringify({\n                            user_id: user.id\n                        })\n                    })\n                        .then(response => response.json())\n                        .then(currentUser => {\n                            this.props.onSetCurrentUser(currentUser.id, \"contractee\")\n                        })\n                }\n            })\n            .then(this.setState({\n                username: \"\",\n                email: \"\",\n                phone: 0,\n                country: \"\",\n                city: \"\",\n                contractee: false,\n                contractor: false\n            }))\n    }\n\n    render() {\n        if (this.state.submitted === true) {\n            return <Redirect to=\"/\" />\n        } else {\n            return (\n                <div className='space_between_lines'>\n                    <form onSubmit={(e) => this.handleFormSubmit(e)} className='space_between_lines'>\n                        <input type='text' id=\"username\" placeholder='username' onChange={(e) => this.handleFormData(e)} value={this.state.username} /><br />\n                        <input type='text' id='city' placeholder='city' onChange={(e) => this.handleFormData(e)} value={this.state.city} /><br />\n                        <input type='text' id='country' placeholder='country' onChange={(e) => this.handleFormData(e)} value={this.state.country} /><br />\n                        <input type='text' id='email' placeholder='email' onChange={(e) => this.handleFormData(e)} value={this.state.email} /><br />\n                        <input type='number' id='number' placeholder='phone' onChange={(e) => this.handleFormData(e)} value={this.state.phone} /><br />\n                        <select onChange={(e) => this.handlePersonSelection(e)}>\n                            <option value=\"\" selected disabled hidden>Choose here</option>\n                            <option value='contractee'>Contractee</option>\n                            <option value='contractor'>Contractor</option>\n                        </select><br />\n                        <input type='submit' value=\"Submit\" />\n                    </form>\n                </div>\n            )\n        }\n    }\n}\n\nexport default SignupForm\n"]},"metadata":{},"sourceType":"module"}